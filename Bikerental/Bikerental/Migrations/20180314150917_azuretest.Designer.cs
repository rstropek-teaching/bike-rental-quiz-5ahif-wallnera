// <auto-generated />
using Bikerental.Context;
using Bikerental.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Bikerental.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180314150917_azuretest")]
    partial class azuretest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bikerental.Model.Bike", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BikeCategory");

                    b.Property<DateTime?>("DateOfLastService");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<double>("RentalPriceAdditionalHour");

                    b.Property<double>("RentalPriceFirstHour");

                    b.HasKey("ID");

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("Bikerental.Model.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Gender");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(10);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Bikerental.Model.Rental", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BikeID");

                    b.Property<int>("CustomerID");

                    b.Property<bool>("Paid");

                    b.Property<DateTime>("RentalBegin");

                    b.Property<double>("RentalCosts");

                    b.Property<DateTime?>("RentalEnd")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("BikeID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("Bikerental.Model.Rental", b =>
                {
                    b.HasOne("Bikerental.Model.Bike", "Bike")
                        .WithMany()
                        .HasForeignKey("BikeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bikerental.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
